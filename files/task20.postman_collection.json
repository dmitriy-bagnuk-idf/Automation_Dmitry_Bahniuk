{
	"info": {
		"_postman_id": "7f443d0e-9382-4593-b368-39a55c39cbff",
		"name": "Task 20",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20225162"
	},
	"item": [
		{
			"name": "get users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Count per pages\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.per_page).to.eql(Number(pm.collectionVariables.get('countPerPage')));\r",
							"});\r",
							"\r",
							"pm.test(\"Contains text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get('text'));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"text\", \"To keep ReqRes free\");\r",
							"pm.collectionVariables.set(\"countPerPage\", 6);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users",
					"host": [
						"{{url}}users"
					]
				}
			},
			"response": []
		},
		{
			"name": "log out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is empty\", function () {\r",
							"    pm.expect(pm.response.empty);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}logout",
					"host": [
						"{{url}}logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is empty\", function () {\r",
							"    pm.expect(pm.response.empty);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}users?id=3",
					"host": [
						"{{url}}users"
					],
					"query": [
						{
							"key": "id",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"id\", 4);\r",
							"pm.collectionVariables.set(\"token\", \"QpwL5tke4Pnpja7X4\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(Number(pm.collectionVariables.get(\"id\")));\r",
							"    \r",
							"});\r",
							"\r",
							"pm.test(\"Check token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.token).to.eql(pm.collectionVariables.get(\"token\"));\r",
							"});    \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}register",
					"host": [
						"{{url}}register"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user (patch)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"name\", \"morpheus\");\r",
							"pm.collectionVariables.set(\"job\", \"good man\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check user name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"Check user job\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql(pm.collectionVariables.get('job'));\r",
							"});\r",
							"\r",
							"pm.test(\"Check 'updatedAt' attribute\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"good man\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users/2",
					"host": [
						"{{url}}users"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user (put)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"name\", \"vasya\");\r",
							"pm.environment.set(\"job\", \"superman\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check user name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get('name'));\r",
							"});\r",
							"\r",
							"pm.test(\"Check user job\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql(pm.environment.get('job'));\r",
							"});\r",
							"\r",
							"pm.test(\"Check 'updatedAt' attribute\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});\r",
							"\r",
							"const jsonSchema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"name\",\r",
							"        \"job\",\r",
							"        \"updatedAt\"\r",
							"    ],\r",
							"    \r",
							"    \"additionalProperties\": false,\r",
							"    \"properties\": {\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"job\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"updatedAt\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test(\"Schema is valid\", function () {\r",
							"    pm.response.to.have.jsonSchema(jsonSchema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"vasya\",\r\n    \"job\": \"superman\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}users/2",
					"host": [
						"{{url}}users"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "job",
			"value": ""
		},
		{
			"key": "text",
			"value": ""
		},
		{
			"key": "countPerPage",
			"value": ""
		}
	]
}